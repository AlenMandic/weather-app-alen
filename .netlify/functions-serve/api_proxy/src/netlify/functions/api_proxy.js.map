{
  "version": 3,
  "sources": ["../../../../Desktop/ALL/Programming/My projects/Full projects, applications/Weather App/netlify/functions/api_proxy.js"],
  "sourceRoot": "C:/Users/Alen/AppData/Local/Temp/tmp-14996-L2c1Uv0jVk85",
  "sourcesContent": ["export async function handler(event, context) {\r\n    const path = event.path\r\n\r\n    const latitude = event.queryStringParameters.latitude;\r\n    const longitude = event.queryStringParameters.longitude;\r\n    const user_timezone = event.queryStringParameters.user_timezone;\r\n    const city_name = event.queryStringParameters.city_name;\r\n    const prefix = event.queryStringParameters.prefix;\r\n\r\n    const API_URL_MAIN = `https://api.open-meteo.com/v1/forecast?latitude=${latitude}&longitude=${longitude}&hourly=temperature_2m,relativehumidity_2m,precipitation_probability,rain,snowfall,weathercode,windspeed_10m&daily=weathercode,windspeed_10m_max,temperature_2m_max,temperature_2m_min,sunrise,sunset,precipitation_sum,rain_sum,snowfall_sum&&current_weather=true&forecast_days=3&${user_timezone}`;\r\n\r\n    const API_URL_AIR = `https://air-quality-api.open-meteo.com/v1/air-quality?latitude=${latitude}&longitude=${longitude}&hourly=european_aqi&${user_timezone}`;\r\n\r\n    const API_DEFAULT_CITY = `https://geocoding-api.open-meteo.com/v1/search?name=${city_name}&count=1&language=en&format=json`;\r\n\r\n    const API_USER_INPUT = `https://geocoding-api.open-meteo.com/v1/search?name=${prefix}&count=10&language=en&format=json`;\r\n\r\n    if (path === \"/.netlify/functions/api_proxy/route1\") {\r\n\r\n        const response = await fetch(API_URL_MAIN);\r\n        const data = await response.json();\r\n\r\n        return {\r\n            statusCode: 200,\r\n            body: JSON.stringify(\r\n                data,\r\n            ),\r\n        };\r\n\r\n    } else if (path === \"/.netlify/functions/api_proxy/route2\") {\r\n        const response = await fetch(API_URL_AIR);\r\n        const data = await response.json();\r\n\r\n        return {\r\n            statusCode: 200,\r\n            body: JSON.stringify(\r\n                data,\r\n            ),\r\n        };\r\n\r\n    } else if (path === \"/.netlify/functions/api_proxy/route3\") {\r\n\r\n        const response = await fetch(API_DEFAULT_CITY);\r\n        const data = await response.json();\r\n\r\n        return {\r\n            statusCode: 200,\r\n            body: JSON.stringify(\r\n                data,\r\n            ),\r\n        };\r\n\r\n    } else if (path === \"/.netlify/functions/api_proxy/route4\") {\r\n\r\n        const response = await fetch(API_USER_INPUT);\r\n        const data = await response.json();\r\n\r\n        return {\r\n            statusCode: 200,\r\n            body: JSON.stringify(\r\n                data,\r\n            ),\r\n        };\r\n\r\n    } else {\r\n\r\n        return {\r\n            statusCode: 404,\r\n            body: JSON.stringify({\r\n                error: \"Route not found.\"\r\n            })\r\n        }\r\n    }\r\n\r\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA8B,OAAO,SAAS;AAC1C,QAAM,OAAO,MAAM;AAEnB,QAAM,WAAW,MAAM,sBAAsB;AAC7C,QAAM,YAAY,MAAM,sBAAsB;AAC9C,QAAM,gBAAgB,MAAM,sBAAsB;AAClD,QAAM,YAAY,MAAM,sBAAsB;AAC9C,QAAM,SAAS,MAAM,sBAAsB;AAE3C,QAAM,eAAe,mDAAmD,sBAAsB,gSAAgS;AAE9X,QAAM,cAAc,kEAAkE,sBAAsB,iCAAiC;AAE7I,QAAM,mBAAmB,uDAAuD;AAEhF,QAAM,iBAAiB,uDAAuD;AAE9E,MAAI,SAAS,wCAAwC;AAEjD,UAAM,WAAW,MAAM,MAAM,YAAY;AACzC,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UACP,IACJ;AAAA,IACJ;AAAA,EAEJ,WAAW,SAAS,wCAAwC;AACxD,UAAM,WAAW,MAAM,MAAM,WAAW;AACxC,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UACP,IACJ;AAAA,IACJ;AAAA,EAEJ,WAAW,SAAS,wCAAwC;AAExD,UAAM,WAAW,MAAM,MAAM,gBAAgB;AAC7C,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UACP,IACJ;AAAA,IACJ;AAAA,EAEJ,WAAW,SAAS,wCAAwC;AAExD,UAAM,WAAW,MAAM,MAAM,cAAc;AAC3C,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UACP,IACJ;AAAA,IACJ;AAAA,EAEJ,OAAO;AAEH,WAAO;AAAA,MACH,YAAY;AAAA,MACZ,MAAM,KAAK,UAAU;AAAA,QACjB,OAAO;AAAA,MACX,CAAC;AAAA,IACL;AAAA,EACJ;AAEJ;",
  "names": []
}
